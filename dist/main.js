(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"body {\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    width: 100vw;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n.mainDiv {\n    width: 90vw;\n    height: 85vh;\n    background-color: rgb(212, 212, 212);\n    align-self: center;\n    margin-top: 1.5rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.8rem;\n    z-index: 10;\n}\n\n.taskBar {\n    background-color: rgb(182, 182, 182);\n    width: 100vw;\n    height: 3rem;\n    padding: 0.6rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    color: white;\n}\n\n.tab {\n    padding: 0.4rem;\n    border: none;\n    border-radius: 0.4rem;\n    font-size: 1.3rem;\n    font-weight: bold;\n    color:rgba(0, 0, 0, 0.603);\n}\n\n.header {\n    font-size: 1.7rem;\n    color: white;\n    text-shadow: 0 0 5px white;\n    width: 100%;\n    text-align: center;\n    padding-top: 0.4rem;\n    border-radius: 0.4rem;\n}\n\n.btn {\n    width: 75%;\n    height: 2rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 1.2rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.inputDiv {\n    width: 75%;\n    height: 40%;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    gap: 0.6rem;\n    font-size: 0.8rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-radius: 0.4rem;\n}\n\n.inputs {\n    display: flex;\n    flex-direction: column;\n}\n\n.submit {\n    background-color: white;\n    padding: 0.4rem;\n    border-radius: 0.2rem;\n}\n\n.newTodo {\n    width: 75%;\n    height: 6rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 0.7rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.inputDivProject {\n    width: 75%;\n    height: 40%;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    gap: 1rem;\n    font-size: 0.8rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-radius: 0.4rem;\n}\n\n.select-menu {\n    width: 80%;\n    height: 7rem;\n    background-color: white;\n    border-radius: 0.4rem;\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.select-todo {\n    width: 75%;\n    height: 2rem;\n    border: none;\n    background-color: rgba(168, 209, 255, 0.5);\n    color: rgb(255, 255, 255);\n    font-weight: bold;\n    font-size: 0.5rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 0.3rem;\n}\n\n.selected{\n    border: 2px solid rgb(0, 255, 255);\n    border-radius: 0.4rem;\n}\n\n.newProject {\n    width: 75%;\n    height: 6rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 0.7rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,uIAAuI;AAC3I;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,0BAA0B;AAC9B;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,0BAA0B;IAC1B,WAAW;IACX,kBAAkB;IAClB,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;IAC3B,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;IAC3B,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;IAC3B,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;IAC3B,SAAS;IACT,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,uBAAuB;IACvB,qBAAqB;IACrB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,0CAA0C;IAC1C,yBAAyB;IACzB,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,kCAAkC;IAClC,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,oCAAoC;IACpC,2BAA2B;IAC3B,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    width: 100vw;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n.mainDiv {\n    width: 90vw;\n    height: 85vh;\n    background-color: rgb(212, 212, 212);\n    align-self: center;\n    margin-top: 1.5rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.8rem;\n    z-index: 10;\n}\n\n.taskBar {\n    background-color: rgb(182, 182, 182);\n    width: 100vw;\n    height: 3rem;\n    padding: 0.6rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    color: white;\n}\n\n.tab {\n    padding: 0.4rem;\n    border: none;\n    border-radius: 0.4rem;\n    font-size: 1.3rem;\n    font-weight: bold;\n    color:rgba(0, 0, 0, 0.603);\n}\n\n.header {\n    font-size: 1.7rem;\n    color: white;\n    text-shadow: 0 0 5px white;\n    width: 100%;\n    text-align: center;\n    padding-top: 0.4rem;\n    border-radius: 0.4rem;\n}\n\n.btn {\n    width: 75%;\n    height: 2rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 1.2rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.inputDiv {\n    width: 75%;\n    height: 40%;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    gap: 0.6rem;\n    font-size: 0.8rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-radius: 0.4rem;\n}\n\n.inputs {\n    display: flex;\n    flex-direction: column;\n}\n\n.submit {\n    background-color: white;\n    padding: 0.4rem;\n    border-radius: 0.2rem;\n}\n\n.newTodo {\n    width: 75%;\n    height: 6rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 0.7rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.inputDivProject {\n    width: 75%;\n    height: 40%;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    gap: 1rem;\n    font-size: 0.8rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-radius: 0.4rem;\n}\n\n.select-menu {\n    width: 80%;\n    height: 7rem;\n    background-color: white;\n    border-radius: 0.4rem;\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.select-todo {\n    width: 75%;\n    height: 2rem;\n    border: none;\n    background-color: rgba(168, 209, 255, 0.5);\n    color: rgb(255, 255, 255);\n    font-weight: bold;\n    font-size: 0.5rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 0.3rem;\n}\n\n.selected{\n    border: 2px solid rgb(0, 255, 255);\n    border-radius: 0.4rem;\n}\n\n.newProject {\n    width: 75%;\n    height: 6rem;\n    border: none;\n    background-color: rgb(236, 236, 236);\n    color: rgba(0, 0, 0, 0.603);\n    font-weight: bold;\n    font-size: 0.7rem;\n    border-radius: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}"],sourceRoot:""}]);const A=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],A=0;A<e.length;A++){var d=e[A],c=r.base?d[0]+r.base:d[0],l=i[c]||0,s="".concat(c," ").concat(l);i[c]=l+1;var u=t(s),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=A,n.splice(A,0,{identifier:s,updater:p,references:1})}a.push(s)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var d=r(e,o),c=0;c<i.length;c++){var l=t(i[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),d=t.n(A),c=t(216),l=t.n(c),s=t(589),u=t.n(s),m=t(426),p={};p.styleTagTransform=u(),p.setAttributes=d(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),n()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const C=function(){let e=document.createElement("div");w.mainDiv.appendChild(e),e.classList.add("header"),e.textContent="My Projects";let n=document.createElement("div");n.classList.add("btn"),n.classList.add("addProject"),w.mainDiv.appendChild(n),n.textContent="Add Project"},B=function(){let e=document.createElement("div");w.mainDiv.appendChild(e),e.classList.add("header"),e.textContent="My To-Dos";let n=document.createElement("div");n.classList.add("btn"),n.classList.add("addTodo"),w.mainDiv.appendChild(n),n.textContent="Add To-do"};class f{constructor(e,n,t,r){this.title=e,this.description=n,this.date=t,this.priority=r}}let b=[];function h(){let e=document.querySelector("#title").value,n=document.querySelector("#description").value,t=document.querySelector("#date").value,r=document.querySelector("#priority").value,o=new f(e,n,t,r);b.push(o)}class g{constructor(e,n){this.name=e,this.todos=n}}let I=-1,v=[],y=[];function x(){document.querySelector(".addProject").addEventListener("click",(()=>{!function(){let e=document.createElement("div");w.mainDiv.appendChild(e),e.classList.add("inputDivProject");let n=document.createElement("div");n.classList.add("inputs");let t=document.createElement("label");t.setAttribute("for","name"),t.innerHTML="Name";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","name"),n.appendChild(t),n.appendChild(r),e.appendChild(n);let o=document.createElement("div");o.classList.add("select-menu"),e.appendChild(o),b.forEach((e=>{const n=document.createElement("div");n.classList.add("select-todo"),document.querySelector(".select-menu").appendChild(n),n.textContent=`${e.title}`})),document.querySelectorAll(".select-todo").forEach((e=>{e.addEventListener("click",(()=>{e.classList.toggle("selected")}))}));const i=document.createElement("button");e.appendChild(i),i.textContent="Submit",i.classList.add("submit"),i.addEventListener("click",(()=>{!function(){let e=document.querySelector("#name").value;document.querySelectorAll(".select-todo").forEach((e=>{I+=1,e.setAttribute("id",`${I}`)})),document.querySelectorAll(".selected").forEach((e=>{y.push(b[e.id])}));let n=new g(e,y);v.push(n)}(),I=-1,y=[],console.log(b),console.log(v),e.innerHTML="",e.classList.remove("inputDiv"),e.classList.add("newProject"),e.textContent=`Project name: ${v[v.length-1].name}. To-do: //HERE I DONT KNOW HOW TO GET ALL THE TODOS FROM THE PROJECT TO SHOW IN TEXT`}))}()}))}const w=function(){let e=document.querySelector("body"),n=document.createElement("div");e.appendChild(n),n.classList.add("taskBar");for(let e=0;e<2;e++){let t=document.createElement("button");t.classList.add("tab"),n.appendChild(t),0==e?(t.textContent="Projects",t.classList.add("projects")):(t.textContent="To-do",t.classList.add("to-do"))}let t=document.querySelector(".projects"),r=document.querySelector(".to-do"),o=document.createElement("div");return o.classList.add("mainDiv"),e.appendChild(o),{body:e,taskBar:n,mainDiv:o,projectBtn:t,todoBtn:r}}();C(),w.todoBtn.addEventListener("click",(()=>{w.mainDiv.innerHTML="",B(),document.querySelector(".addTodo").addEventListener("click",(()=>{!function(){let e=document.createElement("div");w.mainDiv.appendChild(e),e.classList.add("inputDiv");for(let n=0;n<5;n++)if(0==n){let n=document.createElement("div");n.classList.add("inputs");let t=document.createElement("label");t.setAttribute("for","title"),t.innerHTML="Title";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","title"),n.appendChild(t),n.appendChild(r),e.appendChild(n)}else if(1==n){let n=document.createElement("div");n.classList.add("inputs");let t=document.createElement("label");t.setAttribute("for","description"),t.innerHTML="Description";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","description"),n.appendChild(t),n.appendChild(r),e.appendChild(n)}else if(2==n){let n=document.createElement("div");n.classList.add("inputs");let t=document.createElement("label");t.setAttribute("for","date"),t.innerHTML="Date";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","date"),n.appendChild(t),n.appendChild(r),e.appendChild(n)}else if(3==n){let n=document.createElement("div");n.classList.add("inputs");let t=document.createElement("label");t.setAttribute("for","priority"),t.textContent="Priority";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","priority"),n.appendChild(t),n.appendChild(r),e.appendChild(n)}else if(4==n){const n=document.createElement("button");e.appendChild(n),n.textContent="Submit",n.classList.add("submit"),n.addEventListener("click",(()=>{h(),e.innerHTML="",e.classList.remove("inputDiv"),e.classList.add("newTodo"),e.textContent=`${b[b.length-1].title}: ${b[b.length-1].description}, due ${b[b.length-1].date}, priority: ${b[b.length-1].priority}`}))}}()}))})),w.projectBtn.addEventListener("click",(()=>{w.mainDiv.innerHTML="",C(),x()})),x()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,